<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.opt.mapper.ExerciseMapper" >
  <resultMap id="BaseResultMap" type="cn.opt.po.Exercise" >
    <id column="exer_id" property="exerId" jdbcType="INTEGER" />
    <result column="exer_title" property="exerTitle" jdbcType="VARCHAR" />
    <result column="exer_parse" property="exerParse" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    exer_id, exer_title, exer_parse, flag, icon
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.opt.po.ExerciseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exercise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exercise
    where exer_id = #{exerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exercise
    where exer_id = #{exerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.opt.po.ExerciseExample" >
    delete from exercise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.opt.po.Exercise" >
    insert into exercise (exer_id, exer_title, exer_parse, 
      flag, icon)
    values (#{exerId,jdbcType=INTEGER}, #{exerTitle,jdbcType=VARCHAR}, #{exerParse,jdbcType=VARCHAR}, 
      #{flag,jdbcType=VARCHAR}, #{icon,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.opt.po.Exercise" >
    insert into exercise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exerId != null" >
        exer_id,
      </if>
      <if test="exerTitle != null" >
        exer_title,
      </if>
      <if test="exerParse != null" >
        exer_parse,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="icon != null" >
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exerId != null" >
        #{exerId,jdbcType=INTEGER},
      </if>
      <if test="exerTitle != null" >
        #{exerTitle,jdbcType=VARCHAR},
      </if>
      <if test="exerParse != null" >
        #{exerParse,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.opt.po.ExerciseExample" resultType="java.lang.Integer" >
    select count(*) from exercise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exercise
    <set >
      <if test="record.exerId != null" >
        exer_id = #{record.exerId,jdbcType=INTEGER},
      </if>
      <if test="record.exerTitle != null" >
        exer_title = #{record.exerTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.exerParse != null" >
        exer_parse = #{record.exerParse,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exercise
    set exer_id = #{record.exerId,jdbcType=INTEGER},
      exer_title = #{record.exerTitle,jdbcType=VARCHAR},
      exer_parse = #{record.exerParse,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.opt.po.Exercise" >
    update exercise
    <set >
      <if test="exerTitle != null" >
        exer_title = #{exerTitle,jdbcType=VARCHAR},
      </if>
      <if test="exerParse != null" >
        exer_parse = #{exerParse,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=INTEGER},
      </if>
    </set>
    where exer_id = #{exerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.opt.po.Exercise" >
    update exercise
    set exer_title = #{exerTitle,jdbcType=VARCHAR},
      exer_parse = #{exerParse,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=INTEGER}
    where exer_id = #{exerId,jdbcType=INTEGER}
  </update>
  
    <resultMap type="cn.opt.po.Exercise" id="tt">
	<id column="exer_id" property="exerId"></id>
	<result column="exer_title" property="exerTitle"/>
	<result column="exer_parse" property="exerParse"/>
  </resultMap>
  <select id="getRandomExercise" resultMap="tt" parameterType="Integer">
  	 select * from exercise  order by  rand() limit #{i}
  </select>
  
  <update id="setFlag">
  	update exercise set flag=#{uuid} where exer_id=#{exid}
  </update>
  
</mapper>