<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.opt.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="cn.opt.po.Student" >
    <id column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="stu_pwd" property="stuPwd" jdbcType="VARCHAR" />
    <result column="stu_sex" property="stuSex" jdbcType="VARCHAR" />
    <result column="stu_jifen" property="stuJifen" jdbcType="INTEGER" />
    <result column="stu_pro" property="stuPro" jdbcType="VARCHAR" />
    <result column="stu_tel" property="stuTel" jdbcType="VARCHAR" />
    <result column="stu_grade" property="stuGrade" jdbcType="VARCHAR" />
    <result column="stu_pic" property="stuPic" jdbcType="VARCHAR" />
    <result column="stu_quecount" property="stuQuecount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, stu_name, stu_pwd, stu_sex, stu_jifen, stu_pro, stu_tel, stu_grade, stu_pic, 
    stu_quecount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.opt.po.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.opt.po.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.opt.po.Student" >
    insert into student (stu_id, stu_name, stu_pwd, 
      stu_sex, stu_jifen, stu_pro, 
      stu_tel, stu_grade, stu_pic, 
      stu_quecount)
    values (#{stuId,jdbcType=INTEGER}, #{stuName,jdbcType=VARCHAR}, #{stuPwd,jdbcType=VARCHAR}, 
      #{stuSex,jdbcType=VARCHAR}, #{stuJifen,jdbcType=INTEGER}, #{stuPro,jdbcType=VARCHAR}, 
      #{stuTel,jdbcType=VARCHAR}, #{stuGrade,jdbcType=VARCHAR}, #{stuPic,jdbcType=VARCHAR}, 
      #{stuQuecount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.opt.po.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="stuPwd != null" >
        stu_pwd,
      </if>
      <if test="stuSex != null" >
        stu_sex,
      </if>
      <if test="stuJifen != null" >
        stu_jifen,
      </if>
      <if test="stuPro != null" >
        stu_pro,
      </if>
      <if test="stuTel != null" >
        stu_tel,
      </if>
      <if test="stuGrade != null" >
        stu_grade,
      </if>
      <if test="stuPic != null" >
        stu_pic,
      </if>
      <if test="stuQuecount != null" >
        stu_quecount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuPwd != null" >
        #{stuPwd,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuJifen != null" >
        #{stuJifen,jdbcType=INTEGER},
      </if>
      <if test="stuPro != null" >
        #{stuPro,jdbcType=VARCHAR},
      </if>
      <if test="stuTel != null" >
        #{stuTel,jdbcType=VARCHAR},
      </if>
      <if test="stuGrade != null" >
        #{stuGrade,jdbcType=VARCHAR},
      </if>
      <if test="stuPic != null" >
        #{stuPic,jdbcType=VARCHAR},
      </if>
      <if test="stuQuecount != null" >
        #{stuQuecount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.opt.po.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPwd != null" >
        stu_pwd = #{record.stuPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null" >
        stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      </if>
      <if test="record.stuJifen != null" >
        stu_jifen = #{record.stuJifen,jdbcType=INTEGER},
      </if>
      <if test="record.stuPro != null" >
        stu_pro = #{record.stuPro,jdbcType=VARCHAR},
      </if>
      <if test="record.stuTel != null" >
        stu_tel = #{record.stuTel,jdbcType=VARCHAR},
      </if>
      <if test="record.stuGrade != null" >
        stu_grade = #{record.stuGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPic != null" >
        stu_pic = #{record.stuPic,jdbcType=VARCHAR},
      </if>
      <if test="record.stuQuecount != null" >
        stu_quecount = #{record.stuQuecount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_pwd = #{record.stuPwd,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      stu_jifen = #{record.stuJifen,jdbcType=INTEGER},
      stu_pro = #{record.stuPro,jdbcType=VARCHAR},
      stu_tel = #{record.stuTel,jdbcType=VARCHAR},
      stu_grade = #{record.stuGrade,jdbcType=VARCHAR},
      stu_pic = #{record.stuPic,jdbcType=VARCHAR},
      stu_quecount = #{record.stuQuecount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.opt.po.Student" >
    update student
    <set >
      <if test="stuName != null" >
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuPwd != null" >
        stu_pwd = #{stuPwd,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        stu_sex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuJifen != null" >
        stu_jifen = #{stuJifen,jdbcType=INTEGER},
      </if>
      <if test="stuPro != null" >
        stu_pro = #{stuPro,jdbcType=VARCHAR},
      </if>
      <if test="stuTel != null" >
        stu_tel = #{stuTel,jdbcType=VARCHAR},
      </if>
      <if test="stuGrade != null" >
        stu_grade = #{stuGrade,jdbcType=VARCHAR},
      </if>
      <if test="stuPic != null" >
        stu_pic = #{stuPic,jdbcType=VARCHAR},
      </if>
      <if test="stuQuecount != null" >
        stu_quecount = #{stuQuecount,jdbcType=INTEGER},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.opt.po.Student" >
    update student
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_pwd = #{stuPwd,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=VARCHAR},
      stu_jifen = #{stuJifen,jdbcType=INTEGER},
      stu_pro = #{stuPro,jdbcType=VARCHAR},
      stu_tel = #{stuTel,jdbcType=VARCHAR},
      stu_grade = #{stuGrade,jdbcType=VARCHAR},
      stu_pic = #{stuPic,jdbcType=VARCHAR},
      stu_quecount = #{stuQuecount,jdbcType=INTEGER}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  
    <select id="getAllStu1" resultMap="BaseResultMap">
  	  select * from student limit ${(page-1)*rows},${rows}
  </select>
  <select id="getCounts" resultType="Integer">
  	  select count(1) from student;
  </select>
  <!-- 更新密码 -->
  <update id="updatePwd">
  	update student set stu_pwd = #{pass} 
  	where stu_id = #{stuid}
  </update>
</mapper>