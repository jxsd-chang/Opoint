<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.opt.mapper.ExamMapper" >
  <resultMap id="BaseResultMap" type="cn.opt.po.Exam" >
    <id column="ex_id" property="exId" jdbcType="VARCHAR" />
    <result column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="cou_id" property="couId" jdbcType="INTEGER" />
    <result column="pa_id" property="paId" jdbcType="INTEGER" />
    <result column="ex_opt_ans" property="exOptAns" jdbcType="VARCHAR" />
    <result column="ex_dati_ans" property="exDatiAns" jdbcType="VARCHAR" />
    <result column="ex_time" property="exTime" jdbcType="VARCHAR" />
    <result column="ex_grade" property="exGrade" jdbcType="VARCHAR" />
    <result column="ex_state" property="exState" jdbcType="INTEGER" />
    <result column="tea_id" property="teaId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ex_id, stu_id, cou_id, pa_id, ex_opt_ans, ex_dati_ans, ex_time, ex_grade, ex_state, 
    tea_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.opt.po.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where ex_id = #{exId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from exam
    where ex_id = #{exId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.opt.po.ExamExample" >
    delete from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.opt.po.Exam" >
    insert into exam (ex_id, stu_id, cou_id, 
      pa_id, ex_opt_ans, ex_dati_ans, 
      ex_time, ex_grade, ex_state, 
      tea_id)
    values (#{exId,jdbcType=VARCHAR}, #{stuId,jdbcType=INTEGER}, #{couId,jdbcType=INTEGER}, 
      #{paId,jdbcType=INTEGER}, #{exOptAns,jdbcType=VARCHAR}, #{exDatiAns,jdbcType=VARCHAR}, 
      #{exTime,jdbcType=VARCHAR}, #{exGrade,jdbcType=VARCHAR}, #{exState,jdbcType=INTEGER}, 
      #{teaId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.opt.po.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exId != null" >
        ex_id,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="couId != null" >
        cou_id,
      </if>
      <if test="paId != null" >
        pa_id,
      </if>
      <if test="exOptAns != null" >
        ex_opt_ans,
      </if>
      <if test="exDatiAns != null" >
        ex_dati_ans,
      </if>
      <if test="exTime != null" >
        ex_time,
      </if>
      <if test="exGrade != null" >
        ex_grade,
      </if>
      <if test="exState != null" >
        ex_state,
      </if>
      <if test="teaId != null" >
        tea_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exId != null" >
        #{exId,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="couId != null" >
        #{couId,jdbcType=INTEGER},
      </if>
      <if test="paId != null" >
        #{paId,jdbcType=INTEGER},
      </if>
      <if test="exOptAns != null" >
        #{exOptAns,jdbcType=VARCHAR},
      </if>
      <if test="exDatiAns != null" >
        #{exDatiAns,jdbcType=VARCHAR},
      </if>
      <if test="exTime != null" >
        #{exTime,jdbcType=VARCHAR},
      </if>
      <if test="exGrade != null" >
        #{exGrade,jdbcType=VARCHAR},
      </if>
      <if test="exState != null" >
        #{exState,jdbcType=INTEGER},
      </if>
      <if test="teaId != null" >
        #{teaId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.opt.po.ExamExample" resultType="java.lang.Integer" >
    select count(*) from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam
    <set >
      <if test="record.exId != null" >
        ex_id = #{record.exId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.couId != null" >
        cou_id = #{record.couId,jdbcType=INTEGER},
      </if>
      <if test="record.paId != null" >
        pa_id = #{record.paId,jdbcType=INTEGER},
      </if>
      <if test="record.exOptAns != null" >
        ex_opt_ans = #{record.exOptAns,jdbcType=VARCHAR},
      </if>
      <if test="record.exDatiAns != null" >
        ex_dati_ans = #{record.exDatiAns,jdbcType=VARCHAR},
      </if>
      <if test="record.exTime != null" >
        ex_time = #{record.exTime,jdbcType=VARCHAR},
      </if>
      <if test="record.exGrade != null" >
        ex_grade = #{record.exGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.exState != null" >
        ex_state = #{record.exState,jdbcType=INTEGER},
      </if>
      <if test="record.teaId != null" >
        tea_id = #{record.teaId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam
    set ex_id = #{record.exId,jdbcType=VARCHAR},
      stu_id = #{record.stuId,jdbcType=INTEGER},
      cou_id = #{record.couId,jdbcType=INTEGER},
      pa_id = #{record.paId,jdbcType=INTEGER},
      ex_opt_ans = #{record.exOptAns,jdbcType=VARCHAR},
      ex_dati_ans = #{record.exDatiAns,jdbcType=VARCHAR},
      ex_time = #{record.exTime,jdbcType=VARCHAR},
      ex_grade = #{record.exGrade,jdbcType=VARCHAR},
      ex_state = #{record.exState,jdbcType=INTEGER},
      tea_id = #{record.teaId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.opt.po.Exam" >
    update exam
    <set >
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="couId != null" >
        cou_id = #{couId,jdbcType=INTEGER},
      </if>
      <if test="paId != null" >
        pa_id = #{paId,jdbcType=INTEGER},
      </if>
      <if test="exOptAns != null" >
        ex_opt_ans = #{exOptAns,jdbcType=VARCHAR},
      </if>
      <if test="exDatiAns != null" >
        ex_dati_ans = #{exDatiAns,jdbcType=VARCHAR},
      </if>
      <if test="exTime != null" >
        ex_time = #{exTime,jdbcType=VARCHAR},
      </if>
      <if test="exGrade != null" >
        ex_grade = #{exGrade,jdbcType=VARCHAR},
      </if>
      <if test="exState != null" >
        ex_state = #{exState,jdbcType=INTEGER},
      </if>
      <if test="teaId != null" >
        tea_id = #{teaId,jdbcType=INTEGER},
      </if>
    </set>
    where ex_id = #{exId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.opt.po.Exam" >
    update exam
    set stu_id = #{stuId,jdbcType=INTEGER},
      cou_id = #{couId,jdbcType=INTEGER},
      pa_id = #{paId,jdbcType=INTEGER},
      ex_opt_ans = #{exOptAns,jdbcType=VARCHAR},
      ex_dati_ans = #{exDatiAns,jdbcType=VARCHAR},
      ex_time = #{exTime,jdbcType=VARCHAR},
      ex_grade = #{exGrade,jdbcType=VARCHAR},
      ex_state = #{exState,jdbcType=INTEGER},
      tea_id = #{teaId,jdbcType=INTEGER}
    where ex_id = #{exId,jdbcType=VARCHAR}
  </update>
  
    <!-- 
  <resultMap type="cn.opt.po.Exam" id="tt">
  	<id column="ex_id" property="stuId"/>
  	<result column="stu_id" property="stuId"/>
  	<result column="cou_id" property="couId"/>
  	<result column="pa_id" property="paId"/>
  	<result column="ex_opt_ans" property="exOptAns"/>
  	<result column="ex_dati_ans" property="exDatiAns"/>
  	<result column="ex_time" property="exTime"/>
  	<result column="ex_grade" property="exGrade"/>
  	<result column="ex_state" property="exState"/>
  </resultMap>
  
  <select id="selectByExamByLimit" resultMap="tt">
  	select * from exam where tea_id=#{tid} limit #{(currPage-1)*pageSize},#{pageSize}
  </select> -->
</mapper>